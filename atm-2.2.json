{
  "swagger" : "2.0",
  "info" : {
    "title" : "Open Data API - ATM",
    "description" : "Latest Swagger specification for OpenData ATM Locator",
    "version" : "v2.2"
  },
  "host" : "developer.openbanking.org.uk",
  "basePath" : "/open-banking/v2.2",
  "schemes" : [ "https" ],
  "produces" : [ "application/prs.openbanking.opendata.v2.2+json", "application/json" ],
  "paths" : {
    "/atms" : {
      "get" : {
        "tags" : [ "ATM" ],
        "description" : "Gets a list of all `ATM` objects.",
        "parameters" : [ {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "Used for conditional request, to retrieve data only if modified since a given date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response with a list of `ATM` data",
            "schema" : {
              "required" : [ "meta", "data" ],
              "type" : "object",
              "properties" : {
                "meta" : {
                  "title" : "Meta data",
                  "required" : [ "LastUpdated", "TotalResults", "Agreement", "License", "TermsOfUse" ],
                  "type" : "object",
                  "properties" : {
                    "LastUpdated" : {
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "TotalResults" : {
                      "type" : "integer"
                    },
                    "Agreement" : {
                      "enum" : [ "Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions" ],
                      "type" : "string"
                    },
                    "License" : {
                      "format" : "uri",
                      "description" : "Open Banking License",
                      "enum" : [ "https://www.openbanking.org.uk/open-licence" ],
                      "type" : "string"
                    },
                    "TermsOfUse" : {
                      "format" : "uri",
                      "description" : "Open Banking Terms of Use",
                      "enum" : [ "https://www.openbanking.org.uk/terms" ],
                      "type" : "string"
                    }
                  },
                  "additionalProperties" : false
                },
                "data" : {
                  "type" : "array",
                  "items" : {
                    "description" : "Environment of the ATM.",
                    "required" : [ "Brand" ],
                    "type" : "object",
                    "properties" : {
                      "Brand" : {
                        "title" : "Brand",
                        "description" : "Brand of the Acquirer of transactions captured by the ATM",
                        "minItems" : 1,
                        "type" : "array",
                        "items" : {
                          "description" : "Brand of the Acquirer of transactions captured by the ATM",
                          "required" : [ "BrandName", "ATM" ],
                          "type" : "object",
                          "properties" : {
                            "BrandName" : {
                              "title" : "BrandName",
                              "description" : "Brand Name that an organisation uses to market its products or services to a consumer",
                              "maxLength" : 140,
                              "minLength" : 1,
                              "type" : "string"
                            },
                            "ATM" : {
                              "title" : "ATM",
                              "description" : "ATM information.",
                              "minItems" : 1,
                              "type" : "array",
                              "items" : {
                                "description" : "ATM information.",
                                "required" : [ "Identification", "SupportedCurrencies", "Location" ],
                                "type" : "object",
                                "properties" : {
                                  "Identification" : {
                                    "title" : "Identification",
                                    "description" : "ATM terminal device identification for the acquirer and the issuer.",
                                    "maxLength" : 35,
                                    "minLength" : 1,
                                    "type" : "string"
                                  },
                                  "SupportedLanguages" : {
                                    "title" : "SupportedLanguages",
                                    "description" : "Identification of the language name according to the ISO 639-1 codes. The type is validated by the list of values coded with two alphabetic characters, defined in the standard.",
                                    "type" : "array",
                                    "items" : {
                                      "description" : "Identification of the language name according to the ISO 639-1 codes. The type is validated by the list of values coded with two alphabetic characters, defined in the standard.",
                                      "pattern" : "[a-z]{2}",
                                      "type" : "string"
                                    }
                                  },
                                  "ATMServices" : {
                                    "title" : "ATMServices",
                                    "description" : "Describes the type of transaction available for a customer on an ATM.",
                                    "type" : "array",
                                    "items" : {
                                      "description" : "Describes the type of transaction available for a customer on an ATM.",
                                      "enum" : [ "Balance", "BillPayments", "CashDeposits", "CharityDonation", "ChequeDeposits", "CashWithdrawal", "EnvelopeDeposit", "FastCash", "MobileBankingRegistration", "MobilePaymentRegistration", "MobilePhoneTopUp", "OrderStatement", "Other", "PINActivation", "PINChange", "PINUnblock", "MiniStatement" ],
                                      "type" : "string"
                                    }
                                  },
                                  "Accessibility" : {
                                    "title" : "Accessibility",
                                    "description" : "Indicates Types of Accessibility",
                                    "type" : "array",
                                    "items" : {
                                      "description" : "Indicates Types of Accessibility",
                                      "enum" : [ "AudioCashMachine", "AutomaticDoors", "ExternalRamp", "InductionLoop", "InternalRamp", "LevelAccess", "LowerLevelCounter", "Other", "WheelchairAccess" ],
                                      "type" : "string"
                                    }
                                  },
                                  "Access24HoursIndicator" : {
                                    "title" : "Access24HoursIndicator",
                                    "description" : "Indicates that the ATM is available for use by customers 24 hours per day",
                                    "type" : "boolean"
                                  },
                                  "SupportedCurrencies" : {
                                    "title" : "SupportedCurrencies",
                                    "description" : "All ISO 4217 defined currency  supported by the ATM.",
                                    "minItems" : 1,
                                    "type" : "array",
                                    "items" : {
                                      "description" : "ISO 4217 defined currency",
                                      "pattern" : "[A-Z]{3}",
                                      "type" : "string"
                                    }
                                  },
                                  "MinimumPossibleAmount" : {
                                    "title" : "MinimumPossibleAmount",
                                    "description" : "Minimum amount allowed for a transaction in the service.",
                                    "pattern" : "^-?\\d{1,10}\\.?\\d{0,2}$",
                                    "type" : "string"
                                  },
                                  "Note" : {
                                    "title" : "Note",
                                    "description" : "Summary description of the ATM.",
                                    "type" : "array",
                                    "items" : {
                                      "description" : "maxLength 2000 text",
                                      "maxLength" : 2000,
                                      "minLength" : 1,
                                      "type" : "string"
                                    }
                                  },
                                  "OtherAccessibility" : {
                                    "title" : "OtherAccessibility",
                                    "description" : "Enter a new code , name and description for any other ATM accessibility options",
                                    "type" : "array",
                                    "items" : {
                                      "description" : "Enter a new code , name and description for any other ATM accessibility options",
                                      "required" : [ "Name", "Description" ],
                                      "type" : "object",
                                      "properties" : {
                                        "Code" : {
                                          "title" : "Code",
                                          "description" : "The four letter Mnemonic used within an XML file to identify a code",
                                          "maxLength" : 4,
                                          "minLength" : 0,
                                          "pattern" : "^\\w{0,4}$",
                                          "type" : "string"
                                        },
                                        "Name" : {
                                          "title" : "Name",
                                          "description" : "Long name associated with the code",
                                          "maxLength" : 70,
                                          "minLength" : 1,
                                          "type" : "string"
                                        },
                                        "Description" : {
                                          "title" : "Description",
                                          "description" : "Description to describe the purpose of the code",
                                          "maxLength" : 350,
                                          "minLength" : 1,
                                          "type" : "string"
                                        }
                                      }
                                    },
                                    "additionalProperties" : false
                                  },
                                  "OtherATMServices" : {
                                    "title" : "OtherATMServices",
                                    "description" : "Enter a new code , name and description for any other ATM Service",
                                    "type" : "array",
                                    "items" : {
                                      "description" : "Enter a new code , name and description for any other ATM Service",
                                      "required" : [ "Name", "Description" ],
                                      "type" : "object",
                                      "properties" : {
                                        "Code" : {
                                          "title" : "Code",
                                          "description" : "The four letter Mnemonic used within an XML file to identify a code",
                                          "maxLength" : 4,
                                          "minLength" : 0,
                                          "pattern" : "^\\w{0,4}$",
                                          "type" : "string"
                                        },
                                        "Name" : {
                                          "title" : "Name",
                                          "description" : "Long name associated with the code",
                                          "maxLength" : 70,
                                          "minLength" : 1,
                                          "type" : "string"
                                        },
                                        "Description" : {
                                          "title" : "Description",
                                          "description" : "Description to describe the purpose of the code",
                                          "maxLength" : 350,
                                          "minLength" : 1,
                                          "type" : "string"
                                        }
                                      }
                                    },
                                    "additionalProperties" : false
                                  },
                                  "Branch" : {
                                    "title" : "Branch",
                                    "description" : "Information that locates and identifies a specific branch of a financial institution.",
                                    "type" : "object",
                                    "properties" : {
                                      "Identification" : {
                                        "title" : "Identification",
                                        "description" : "Unique and unambiguous identification of a branch of a financial institution.",
                                        "maxLength" : 35,
                                        "minLength" : 1,
                                        "type" : "string"
                                      }
                                    },
                                    "additionalProperties" : false
                                  },
                                  "Location" : {
                                    "title" : "Location",
                                    "description" : "Location of the ATM.",
                                    "required" : [ "PostalAddress" ],
                                    "type" : "object",
                                    "properties" : {
                                      "LocationCategory" : {
                                        "title" : "LocationCategory",
                                        "description" : "Indicates the environment of the ATM.",
                                        "type" : "array",
                                        "items" : {
                                          "description" : "Indicates the environment of the ATM.",
                                          "enum" : [ "BranchExternal", "BranchInternal", "BranchLobby", "Other", "RetailerOutlet", "RemoteUnit" ],
                                          "type" : "string"
                                        }
                                      },
                                      "OtherLocationCategory" : {
                                        "title" : "OtherLocationCategory",
                                        "description" : "Enter a new code , name and description for any other location category",
                                        "type" : "array",
                                        "items" : {
                                          "description" : "Enter a new code , name and description for any other location category",
                                          "required" : [ "Name", "Description" ],
                                          "type" : "object",
                                          "properties" : {
                                            "Code" : {
                                              "title" : "Code",
                                              "description" : "The four letter Mnemonic used within an XML file to identify a code",
                                              "maxLength" : 4,
                                              "minLength" : 0,
                                              "pattern" : "^\\w{0,4}$",
                                              "type" : "string"
                                            },
                                            "Name" : {
                                              "title" : "Name",
                                              "description" : "Long name associated with the code",
                                              "maxLength" : 70,
                                              "minLength" : 1,
                                              "type" : "string"
                                            },
                                            "Description" : {
                                              "title" : "Description",
                                              "description" : "Description to describe the purpose of the code",
                                              "maxLength" : 350,
                                              "minLength" : 1,
                                              "type" : "string"
                                            }
                                          }
                                        },
                                        "additionalProperties" : false
                                      },
                                      "Site" : {
                                        "title" : "Site",
                                        "description" : "Used by a Financial Institution internally to identify the location of an ATM.",
                                        "type" : "object",
                                        "properties" : {
                                          "Identification" : {
                                            "title" : "Identification",
                                            "description" : "ATM site identification for the Financial Institution.",
                                            "maxLength" : 35,
                                            "minLength" : 1,
                                            "type" : "string"
                                          },
                                          "Name" : {
                                            "title" : "Name",
                                            "description" : "ATM site name as used by Financial Institution.",
                                            "maxLength" : 140,
                                            "minLength" : 1,
                                            "type" : "string"
                                          }
                                        },
                                        "additionalProperties" : false
                                      },
                                      "PostalAddress" : {
                                        "title" : "PostalAddress",
                                        "description" : "Information that locates and identifies a specific address, as defined by postal services or in free format text.",
                                        "type" : "object",
                                        "properties" : {
                                          "AddressLine" : {
                                            "title" : "AddressLine",
                                            "description" : "Information that locates and identifies a specific address, as defined by postal services, that is presented in free format text.",
                                            "maxItems" : 7,
                                            "minItems" : 0,
                                            "type" : "array",
                                            "items" : {
                                              "description" : "maxLength 70 text",
                                              "maxLength" : 70,
                                              "minLength" : 1,
                                              "type" : "string"
                                            }
                                          },
                                          "BuildingNumber" : {
                                            "title" : "BuildingNumber",
                                            "description" : "Name or Number that identifies the position of a building on a street.",
                                            "maxLength" : 350,
                                            "minLength" : 1,
                                            "type" : "string"
                                          },
                                          "StreetName" : {
                                            "title" : "StreetName",
                                            "description" : "Name of a street or thoroughfare.",
                                            "maxLength" : 70,
                                            "minLength" : 1,
                                            "type" : "string"
                                          },
                                          "TownName" : {
                                            "title" : "TownName",
                                            "description" : "Name of a built-up area, with defined boundaries, and a local government.",
                                            "maxLength" : 35,
                                            "minLength" : 1,
                                            "type" : "string"
                                          },
                                          "CountrySubDivision" : {
                                            "title" : "CountrySubDivision",
                                            "description" : "Identifies a subdivision of a country, for instance state, region, county.",
                                            "maxItems" : 2,
                                            "minItems" : 0,
                                            "type" : "array",
                                            "items" : {
                                              "description" : "maxLength 35 text",
                                              "maxLength" : 35,
                                              "minLength" : 1,
                                              "type" : "string"
                                            }
                                          },
                                          "Country" : {
                                            "title" : "Country",
                                            "description" : "Nation with its own government, occupying a particular territory.",
                                            "pattern" : "[A-Z]{2}",
                                            "type" : "string"
                                          },
                                          "PostCode" : {
                                            "title" : "PostCode",
                                            "description" : "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.",
                                            "maxLength" : 16,
                                            "minLength" : 1,
                                            "type" : "string"
                                          },
                                          "GeoLocation" : {
                                            "title" : "GeoLocation",
                                            "description" : "Geographic location of the ATM specified by geographic coordinates or UTM coordinates.",
                                            "required" : [ "GeographicCoordinates" ],
                                            "type" : "object",
                                            "properties" : {
                                              "GeographicCoordinates" : {
                                                "title" : "GeographicCoordinates",
                                                "description" : "Location on the earth specified by two numbers representing vertical and horizontal position.",
                                                "required" : [ "Latitude", "Longitude" ],
                                                "type" : "object",
                                                "properties" : {
                                                  "Latitude" : {
                                                    "title" : "Latitude",
                                                    "description" : "Latitude measured in decimal degrees.",
                                                    "pattern" : "^-?\\d{1,3}\\.\\d{1,8}$",
                                                    "type" : "string"
                                                  },
                                                  "Longitude" : {
                                                    "title" : "Longitude",
                                                    "description" : "Angular measurement of the distance of a location on the earth east or west of the Greenwich observatory.\nThe longitude is measured in decimal degrees.",
                                                    "pattern" : "^-?\\d{1,3}\\.\\d{1,8}$",
                                                    "type" : "string"
                                                  }
                                                },
                                                "additionalProperties" : false
                                              }
                                            },
                                            "additionalProperties" : false
                                          }
                                        },
                                        "additionalProperties" : false
                                      }
                                    },
                                    "additionalProperties" : false
                                  }
                                }
                              },
                              "additionalProperties" : false
                            }
                          }
                        },
                        "additionalProperties" : false
                      }
                    }
                  }
                }
              },
              "additionalProperties" : false
            },
            "headers" : {
              "Strict-Transport-Security" : {
                "description" : "HTTPS strict transport security header",
                "type" : "string",
                "default" : "max-age=31536000"
              },
              "Etag" : {
                "description" : "A unique ID identifying whether this resource has changed",
                "type" : "string"
              },
              "Cache-Control" : {
                "description" : "Describes how long this response can be cached",
                "type" : "string",
                "default" : "max-age=28800"
              },
              "X-Frame-Options" : {
                "description" : "Prevent this request from being loaded in any iframes",
                "type" : "string",
                "default" : "DENY"
              },
              "X-Content-Type-Options" : {
                "description" : "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "type" : "string",
                "default" : "nosniff"
              }
            },
            "examples" : {
              "application/json" : {
                "data" : [ {
                  "Brand" : [ {
                    "BrandName" : "UK",
                    "ATM" : [ {
                      "Identification" : "AB461881",
                      "SupportedLanguages" : [ "en", "fr", "es", "de" ],
                      "ATMServices" : [ "CashWithdrawal", "PINChange", "MobilePhoneTopUp", "Balance", "MiniStatement", "CharityDonation" ],
                      "SupportedCurrencies" : [ "GBP" ],
                      "MinimumPossibleAmount" : "5",
                      "Branch" : {
                        "Identification" : "402529"
                      },
                      "Location" : {
                        "Site" : {
                          "Name" : "ILKESTON I1"
                        },
                        "PostalAddress" : {
                          "StreetName" : "63 Bath Street",
                          "TownName" : "ILKESTON",
                          "Country" : "GB",
                          "PostCode" : "DE7 8DD",
                          "GeoLocation" : {
                            "GeographicCoordinates" : {
                              "Latitude" : "52.9740105",
                              "Longitude" : "-1.3090999"
                            }
                          }
                        }
                      }
                    } ]
                  } ]
                } ]
              }
            }
          },
          "400" : {
            "description" : "You have sent a request which could not be understood.",
            "schema" : {
              "title" : "400 Error object",
              "required" : [ "status", "title", "description" ],
              "type" : "object",
              "properties" : {
                "status" : {
                  "enum" : [ "400" ],
                  "type" : "string"
                },
                "title" : {
                  "enum" : [ "Bad request" ],
                  "type" : "string"
                },
                "description" : {
                  "enum" : [ "You have sent a request which could not be understood." ],
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            },
            "headers" : {
              "Strict-Transport-Security" : {
                "description" : "HTTPS strict transport security header",
                "type" : "string"
              },
              "X-Frame-Options" : {
                "description" : "Prevent this request from being loaded in any iframes",
                "type" : "string",
                "default" : "DENY"
              },
              "X-Content-Type-Options" : {
                "description" : "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "type" : "string",
                "default" : "nosniff"
              },
              "Status Code" : {
                "description" : "The HTTP status code defining the error",
                "type" : "integer",
                "default" : 400
              }
            }
          },
          "408" : {
            "description" : "Your client has failed to submit a request, and a timeout has occurred.",
            "schema" : {
              "title" : "408 Error object",
              "required" : [ "status", "title", "description" ],
              "type" : "object",
              "properties" : {
                "status" : {
                  "enum" : [ "408" ],
                  "type" : "string"
                },
                "title" : {
                  "enum" : [ "Client timeout" ],
                  "type" : "string"
                },
                "description" : {
                  "enum" : [ "Your client has failed to submit a request, and a timeout has occurred." ],
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            },
            "headers" : {
              "Strict-Transport-Security" : {
                "description" : "HTTPS strict transport security header",
                "type" : "string"
              },
              "X-Frame-Options" : {
                "description" : "Prevent this request from being loaded in any iframes",
                "type" : "string",
                "default" : "DENY"
              },
              "X-Content-Type-Options" : {
                "description" : "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "type" : "string",
                "default" : "nosniff"
              },
              "Status Code" : {
                "description" : "The HTTP status code defining the error",
                "type" : "integer",
                "default" : 400
              }
            }
          },
          "429" : {
            "description" : "You have requested this resource too often. Slow down.",
            "schema" : {
              "title" : "429 Error object",
              "required" : [ "status", "title", "description" ],
              "type" : "object",
              "properties" : {
                "status" : {
                  "enum" : [ "429" ],
                  "type" : "string"
                },
                "title" : {
                  "enum" : [ "Too many requests" ],
                  "type" : "string"
                },
                "description" : {
                  "enum" : [ "You have requested this resource too often. Slow down." ],
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            },
            "headers" : {
              "Strict-Transport-Security" : {
                "description" : "HTTPS strict transport security header",
                "type" : "string"
              },
              "X-Frame-Options" : {
                "description" : "Prevent this request from being loaded in any iframes",
                "type" : "string",
                "default" : "DENY"
              },
              "X-Content-Type-Options" : {
                "description" : "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "type" : "string",
                "default" : "nosniff"
              },
              "Status Code" : {
                "description" : "The HTTP status code defining the error",
                "type" : "integer",
                "default" : 400
              }
            }
          },
          "500" : {
            "description" : "An error occurred on the server. No further information is available.",
            "schema" : {
              "title" : "500 Error object",
              "required" : [ "status", "title", "description" ],
              "type" : "object",
              "properties" : {
                "status" : {
                  "enum" : [ "500" ],
                  "type" : "string"
                },
                "title" : {
                  "enum" : [ "Internal server error" ],
                  "type" : "string"
                },
                "description" : {
                  "enum" : [ "An error occurred on the server. No further information is available." ],
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            },
            "headers" : {
              "Strict-Transport-Security" : {
                "description" : "HTTPS strict transport security header",
                "type" : "string"
              },
              "X-Frame-Options" : {
                "description" : "Prevent this request from being loaded in any iframes",
                "type" : "string",
                "default" : "DENY"
              },
              "X-Content-Type-Options" : {
                "description" : "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "type" : "string",
                "default" : "nosniff"
              },
              "Status Code" : {
                "description" : "The HTTP status code defining the error",
                "type" : "integer",
                "default" : 400
              }
            }
          },
          "503" : {
            "description" : "The service is temporarily unavailable.",
            "schema" : {
              "title" : "503 Error object",
              "required" : [ "status", "title", "description" ],
              "type" : "object",
              "properties" : {
                "status" : {
                  "enum" : [ "503" ],
                  "type" : "string"
                },
                "title" : {
                  "enum" : [ "Service temporarily unavailable" ],
                  "type" : "string"
                },
                "description" : {
                  "enum" : [ "The service is temporarily unavailable." ],
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            },
            "headers" : {
              "Strict-Transport-Security" : {
                "description" : "HTTPS strict transport security header",
                "type" : "string"
              },
              "X-Frame-Options" : {
                "description" : "Prevent this request from being loaded in any iframes",
                "type" : "string",
                "default" : "DENY"
              },
              "X-Content-Type-Options" : {
                "description" : "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "type" : "string",
                "default" : "nosniff"
              },
              "Status Code" : {
                "description" : "The HTTP status code defining the error",
                "type" : "integer",
                "default" : 400
              }
            }
          },
          "default" : {
            "description" : "A standard error response.",
            "schema" : {
              "title" : "Error object",
              "required" : [ "status", "title", "description" ],
              "type" : "object",
              "properties" : {
                "status" : {
                  "description" : "This corresponds to the HTTP status code",
                  "type" : "string"
                },
                "title" : {
                  "description" : "A short title of the type of error",
                  "type" : "string"
                },
                "description" : {
                  "description" : "Further details describing the error",
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            },
            "headers" : {
              "Strict-Transport-Security" : {
                "description" : "HTTPS strict transport security header",
                "type" : "string"
              },
              "X-Frame-Options" : {
                "description" : "Prevent this request from being loaded in any iframes",
                "type" : "string",
                "default" : "DENY"
              },
              "X-Content-Type-Options" : {
                "description" : "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "type" : "string",
                "default" : "nosniff"
              },
              "Status Code" : {
                "description" : "The HTTP status code defining the error",
                "type" : "integer",
                "default" : 400
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ATM" ],
        "description" : "Gets header information on the current set of `ATM` data",
        "parameters" : [ {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "Used for conditional request, to retrieve data only if modified since a given date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "No response",
            "schema" : {
              "title" : "No response",
              "type" : "object"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "api-key" : {
      "type" : "apiKey",
      "name" : "api-key",
      "in" : "header"
    }
  },
  "security" : [ {
    "api-key" : [ ]
  } ],
  "tags" : [ {
    "name" : "ATM",
    "description" : "Endpoint for getting ATM data"
  } ]
}