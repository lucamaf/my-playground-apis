{
  "swagger": "2.0",
  "info": {
    "description": "Latest Swagger specification for OpenData ATM Locator",
    "title": "Open-Data-API-ATM",
    "version": "2.2"
  },
  "host": "example.com",
  "basePath": "/rest/Open-Data-API-ATM/2.2",
  "schemes": [
    "http"
  ],
  "paths": {
    "/atms": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response with a list of `ATM` data",
            "headers": {
              "Cache-Control": {
                "description": "Describes how long this response can be cached",
                "type": "string"
              },
              "Etag": {
                "description": "A unique ID identifying whether this resource has changed",
                "type": "string"
              },
              "Strict-Transport-Security": {
                "description": "HTTPS strict transport security header",
                "type": "string"
              },
              "X-Content-Type-Options": {
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "type": "string"
              },
              "X-Frame-Options": {
                "description": "Prevent this request from being loaded in any iframes",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/ATM"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "You have sent a request which could not be understood.",
            "headers": {
              "Status Code": {
                "description": "The HTTP status code defining the error",
                "type": "integer"
              },
              "Strict-Transport-Security": {
                "description": "HTTPS strict transport security header",
                "type": "string"
              },
              "X-Content-Type-Options": {
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "type": "string"
              },
              "X-Frame-Options": {
                "description": "Prevent this request from being loaded in any iframes",
                "type": "string"
              }
            },
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "title": "400 Error object",
              "type": "object"
            }
          },
          "408": {
            "description": "Your client has failed to submit a request, and a timeout has occurred.",
            "headers": {
              "Status Code": {
                "description": "The HTTP status code defining the error",
                "type": "integer"
              },
              "Strict-Transport-Security": {
                "description": "HTTPS strict transport security header",
                "type": "string"
              },
              "X-Content-Type-Options": {
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "type": "string"
              },
              "X-Frame-Options": {
                "description": "Prevent this request from being loaded in any iframes",
                "type": "string"
              }
            },
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "title": "408 Error object",
              "type": "object"
            }
          },
          "429": {
            "description": "You have requested this resource too often. Slow down.",
            "headers": {
              "Status Code": {
                "description": "The HTTP status code defining the error",
                "type": "integer"
              },
              "Strict-Transport-Security": {
                "description": "HTTPS strict transport security header",
                "type": "string"
              },
              "X-Content-Type-Options": {
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "type": "string"
              },
              "X-Frame-Options": {
                "description": "Prevent this request from being loaded in any iframes",
                "type": "string"
              }
            },
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "title": "429 Error object",
              "type": "object"
            }
          },
          "500": {
            "description": "An error occurred on the server. No further information is available.",
            "headers": {
              "Status Code": {
                "description": "The HTTP status code defining the error",
                "type": "integer"
              },
              "Strict-Transport-Security": {
                "description": "HTTPS strict transport security header",
                "type": "string"
              },
              "X-Content-Type-Options": {
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "type": "string"
              },
              "X-Frame-Options": {
                "description": "Prevent this request from being loaded in any iframes",
                "type": "string"
              }
            },
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "title": "500 Error object",
              "type": "object"
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "headers": {
              "Status Code": {
                "description": "The HTTP status code defining the error",
                "type": "integer"
              },
              "Strict-Transport-Security": {
                "description": "HTTPS strict transport security header",
                "type": "string"
              },
              "X-Content-Type-Options": {
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "type": "string"
              },
              "X-Frame-Options": {
                "description": "Prevent this request from being loaded in any iframes",
                "type": "string"
              }
            },
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "title": "503 Error object",
              "type": "object"
            }
          },
          "default": {
            "description": "A standard error response.",
            "headers": {
              "Status Code": {
                "description": "The HTTP status code defining the error",
                "type": "integer"
              },
              "Strict-Transport-Security": {
                "description": "HTTPS strict transport security header",
                "type": "string"
              },
              "X-Content-Type-Options": {
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "type": "string"
              },
              "X-Frame-Options": {
                "description": "Prevent this request from being loaded in any iframes",
                "type": "string"
              }
            },
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "title": "Error object",
              "type": "object"
            }
          }
        },
        "tags": [
          "ATM"
        ],
        "description": "Gets a list of all `ATM` objects."
      },
      "head": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Used for conditional request, to retrieve data only if modified since a given date",
            "in": "header",
            "name": "If-Modified-Since",
            "type": "string"
          },
          {
            "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
            "in": "header",
            "name": "If-None-Match",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "No response",
            "schema": {
              "title": "No response",
              "type": "object"
            }
          }
        },
        "tags": [
          "ATM"
        ],
        "description": "Gets header information on the current set of `ATM` data"
      }
    }
  },
  "definitions": {
    "ATM": {
      "description": "Environment of the ATM",
      "properties": {
        "Brand": {
          "$ref": "#/definitions/Brand"
        }
      },
      "required": [
        "Brand"
      ],
      "type": "object"
    },
    "ATM-info": {
      "properties": {
        "ATMServices": {
          "$ref": "#/definitions/ATMServices"
        },
        "Access24HoursIndicator": {
          "$ref": "#/definitions/Access24HoursIndicator"
        },
        "Accessibility": {
          "$ref": "#/definitions/Accessibility"
        },
        "Branch": {
          "$ref": "#/definitions/Branch"
        },
        "Identification": {
          "$ref": "#/definitions/Identification"
        },
        "Location": {
          "$ref": "#/definitions/Location"
        },
        "MinimumPossibleAmount": {
          "$ref": "#/definitions/MinimumPossibleAmount"
        },
        "Note": {
          "$ref": "#/definitions/Note"
        },
        "OtherATMServices": {
          "$ref": "#/definitions/OtherATMServices"
        },
        "OtherAccessibility": {
          "$ref": "#/definitions/OtherAccessibility"
        },
        "SupportedCurrencies": {
          "$ref": "#/definitions/SupportedCurrencies"
        },
        "SupportedLanguages": {
          "$ref": "#/definitions/SupportedLanguages"
        }
      },
      "required": [
        "Identification",
        "Location",
        "SupportedCurrencies"
      ],
      "type": "object"
    },
    "ATMServices": {
      "type": "object"
    },
    "Access24HoursIndicator": {
      "type": "object"
    },
    "Accessibility": {
      "type": "object"
    },
    "AddressLine": {
      "type": "object"
    },
    "Branch": {
      "properties": {
        "Identification": {
          "$ref": "#/definitions/Identification"
        }
      },
      "type": "object"
    },
    "Brand": {
      "properties": {
        "ATM": {
          "$ref": "#/definitions/ATM-info"
        },
        "BrandName": {
          "$ref": "#/definitions/BrandName"
        }
      },
      "required": [
        "ATM",
        "BrandName"
      ],
      "type": "object"
    },
    "BrandName": {
      "type": "object"
    },
    "BuildingNumber": {
      "type": "object"
    },
    "Code": {
      "type": "object"
    },
    "Country": {
      "type": "object"
    },
    "CountrySubDivision": {
      "type": "object"
    },
    "Description": {
      "type": "object"
    },
    "GeoLocation": {
      "properties": {
        "GeographicCoordinates": {
          "$ref": "#/definitions/GeographicCoordinates"
        }
      },
      "required": [
        "GeographicCoordinates"
      ],
      "type": "object"
    },
    "GeographicCoordinates": {
      "properties": {
        "Latitude": {
          "$ref": "#/definitions/Latitude"
        },
        "Longitude": {
          "$ref": "#/definitions/Longitude"
        }
      },
      "required": [
        "Latitude",
        "Longitude"
      ],
      "type": "object"
    },
    "Identification": {
      "type": "object"
    },
    "Latitude": {
      "type": "object"
    },
    "Location": {
      "properties": {
        "LocationCategory": {
          "$ref": "#/definitions/LocationCategory"
        },
        "OtherLocationCategory": {
          "$ref": "#/definitions/OtherLocationCategory"
        },
        "PostalAddress": {
          "$ref": "#/definitions/PostalAddress"
        },
        "Site": {
          "$ref": "#/definitions/Site"
        }
      },
      "required": [
        "PostalAddress"
      ],
      "type": "object"
    },
    "LocationCategory": {
      "type": "object"
    },
    "Longitude": {
      "type": "object"
    },
    "MinimumPossibleAmount": {
      "type": "object"
    },
    "Name": {
      "type": "object"
    },
    "Note": {
      "type": "object"
    },
    "OtherATMServices": {
      "properties": {
        "Code": {
          "$ref": "#/definitions/Code"
        },
        "Description": {
          "$ref": "#/definitions/Description"
        },
        "Name": {
          "$ref": "#/definitions/Name"
        }
      },
      "required": [
        "Description",
        "Name"
      ],
      "type": "object"
    },
    "OtherAccessibility": {
      "properties": {
        "Code": {
          "$ref": "#/definitions/Code"
        },
        "Description": {
          "$ref": "#/definitions/Description"
        },
        "Name": {
          "$ref": "#/definitions/Name"
        }
      },
      "required": [
        "Description",
        "Name"
      ],
      "type": "object"
    },
    "OtherLocationCategory": {
      "properties": {
        "Code": {
          "$ref": "#/definitions/Code"
        },
        "Description": {
          "$ref": "#/definitions/Description"
        },
        "Name": {
          "$ref": "#/definitions/Name"
        }
      },
      "required": [
        "Description",
        "Name"
      ],
      "type": "object"
    },
    "PostCode": {
      "type": "object"
    },
    "PostalAddress": {
      "properties": {
        "AddressLine": {
          "$ref": "#/definitions/AddressLine"
        },
        "BuildingNumber": {
          "$ref": "#/definitions/BuildingNumber"
        },
        "Country": {
          "$ref": "#/definitions/Country"
        },
        "CountrySubDivision": {
          "$ref": "#/definitions/CountrySubDivision"
        },
        "GeoLocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "PostCode": {
          "$ref": "#/definitions/PostCode"
        },
        "StreetName": {
          "$ref": "#/definitions/StreetName"
        },
        "TownName": {
          "$ref": "#/definitions/TownName"
        }
      },
      "type": "object"
    },
    "Site": {
      "properties": {
        "Identification": {
          "$ref": "#/definitions/Identification"
        },
        "Name": {
          "$ref": "#/definitions/Name"
        }
      },
      "type": "object"
    },
    "StreetName": {
      "type": "object"
    },
    "SupportedCurrencies": {
      "type": "object"
    },
    "SupportedLanguages": {
      "type": "object"
    },
    "TownName": {
      "type": "object"
    }
  },
  "securityDefinitions": {
    "api-key": {
      "in": "header",
      "name": "api-key",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "api-key": []
    }
  ],
  "tags": [
    {
      "description": "Endpoint for getting ATM data",
      "name": "ATM"
    }
  ],
  "x-components": {}
}
